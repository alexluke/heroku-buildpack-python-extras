#!/usr/bin/env bash

shopt -s extglob

[ $(uname) == "Darwin" ] && SED_FLAG="-l" || SED_FLAG="-u"

# Syntax sugar.
function indent() {
    RE="s/^/       /"
    sed $SED_FLAG "$RE"
}

# Clean up pip output
function cleanup_pip() {
    sed -e 's/\.\.\.\+/.../g' | \
        sed -e '/already satisfied/d' | \
        sed -e '/Overwriting/d' |  \
        sed -e '/python executable/d' | \
        sed -e '/no previously-included files/d'
}

# Virtualenv wrapper.
function virtualenv() {
    python "$ROOT_DIR/vendor/virtualenv-1.7.2/virtualenv.py" "$@"
}

# Buildpack Steps. Usage:
#
#     $ puts_step "Step #1"
#     -----> Step #1
function puts_step() {
    time_step
    echo "-----> $@"
}

# Buildpack Warnings. Usage:
#
#     $ puts_warn "Some Warning!"
#     !     Some Warning!
function puts_warn() {
    echo " !     $@"
}

# Prints the elapsed time in seconds since the last time it was called if
# longer than the threshold (10s). Usage:
#
#     $ time_step
#     $ sleep 15
#     $ time_step
#     Elapsed time (in seconds): 15
function time_step() {
    if [[ -n "$DISABLE_TIME_STEPS" ]]; then
        return
    fi
    if [[ -z "$TIME_SINCE_LAST_STEP" ]]; then
        export TIME_SINCE_LAST_STEP=$(date +%s)
        return
    fi

    local threshold=${TIME_STEPS_THRESHOLD:-10}
    local current_time=$(date +%s)
    local difference=$((current_time-TIME_SINCE_LAST_STEP))
    export TIME_SINCE_LAST_STEP="$current_time"
    if [[ "$difference" -gt "$threshold" ]]; then
        echo "Elapsed time (in seconds): $difference" | indent
    fi
}

# Usage: $ set_env_override key value
function set_env_override() {
    echo "export $1=$2" >> ${3:-$PYTHON_PROFILE_PATH}
}

# Usage: $ set_env_default key value
function set_env_default() {
    echo "export $1=\${$1:-$2}" >> ${3:-$PYTHON_PROFILE_PATH}
}

# Usage: unset_env key
function unset_env() {
    echo "unset $1" >> ${2:-$PYTHON_PROFILE_PATH}
}

# Does some serious copying.
function deep_cp (){
  find -H $1 -maxdepth 1 -name '.*' -a \( -type d -o -type f -o -type l \) -exec cp -a '{}' $2 \;
  cp -r $1/!(tmp) $2
}

# Does some serious moving.
function deep_mv (){
  deep_cp "$1" "$2"
  rm -fr $1/!(tmp)
  find -H $1 -maxdepth 1 -name '.*' -a \( -type d -o -type f -o -type l \) -exec rm -fr '{}' \;
}

# Usage: $ download_package bucket engine version location
function download_package() {
    local bucket="$1"
    local engine="$2"
    local version="$3"
    local location="$4"
    local package="http://s3.amazonaws.com/$bucket/$engine-$version.tgz"

    mkdir -p "$location"
    curl "$package" -s -o - | tar xzf - -C "$location"
}
