#!/usr/bin/env bash

shopt -s extglob

# Syntax sugar.
indent() {
  RE="s/^/       /"
  [ $(uname) == "Darwin" ] && sed -l "$RE" || sed -u "$RE"
}

# Clean up pip output
pip-cleanup() {
  sed -e 's/\.\.\.\+/.../g' | sed -e '/already satisfied/d' | sed -e '/Overwriting/d' |  sed -e '/python executable/d' | sed -e '/no previously-included files/d'
}

# Virtualenv wrapper.
function virtualenv (){
  python "$ROOT_DIR/vendor/virtualenv-1.7.2/virtualenv.py" "$@"
}

# Buildpack Steps.
function puts-step (){
  echo "-----> $@"
}

# Buildpack Warnings.
function puts-warn (){
  echo " !     $@"
}

# Usage: $ set-env-override key value
function set-env-override (){
  echo "export $1=$2" >> ${3:-$PROFILE_PATH}
}

# Usage: $ set-env-default key value
function set-env-default (){
  echo "export $1=\${$1:-$2}" >> ${3:-$PROFILE_PATH}
}

# Usage: $ package-download buildpack engine version location
function package-download (){
  BUILDPACK="$1"
  ENGINE="$2"
  VERSION="$3"
  LOCATION="$4"
  PACKAGE="http://s3.amazonaws.com/heroku-buildpack-$BUILDPACK/$ENGINE-$VERSION.tgz"

  mkdir -p $LOCATION
  curl $PACKAGE -s -o - | tar xzf - -C $LOCATION
}

# Does some serious copying.
function deep-cp (){
  find -H $1 -maxdepth 1 -name '.*' -a \( -type d -o -type f -o -type l \) -exec cp -a '{}' $2 \;
  cp -r $1/!(tmp) $2
  # echo copying $1 to $2
}

# Does some serious moving.
function deep-mv (){
  deep-cp $1 $2

  rm -fr $1/!(tmp)
  find -H $1 -maxdepth 1 -name '.*' -a \( -type d -o -type f -o -type l \) -exec rm -fr '{}' \;
}

# Recursively finds requirements.txt files
function list-req (){
  echo $@
  for req in $(grep -Fie "-r " $@ | sed 's/-r //g')
    do
      path="$(dirname $@)/$req"
      list-req $path
    done
}

# Find pattern in requirements files recursively
# Usage: $ in-req pattern file
function in-req (){
  for file in $(list-req $2)
    do
      if (grep -Fiqe "$1" "$file") then
        return 0
      fi
    done
  return 1
}
